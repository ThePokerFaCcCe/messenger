# Generated by Django 3.2.11 on 2022-02-05 19:13

import community.models.mixins.negative_uuid_mixin
import community.models.utils.link_generator
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import picturic.fields
import picturic.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(auto_created=True, choices=[('GP', 'Group'), ('CH', 'Channel')], max_length=2)),
                ('name', models.CharField(max_length=64, verbose_name='Name')),
                ('description', models.TextField(blank=True, max_length=255, null=True, verbose_name='Description')),
                ('profile_image', picturic.fields.PictureField(max_length=9999, null=True, upload_to=picturic.utils.upload_to_path)),
                ('is_deleted', models.BooleanField(default=False, help_text='Is community deleted or not', verbose_name='Is deleted')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('community_id', models.PositiveIntegerField()),
                ('community_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
            bases=(community.models.mixins.negative_uuid_mixin.NegativeUUIDMixin, models.Model),
        ),
        migrations.CreateModel(
            name='GroupRules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_send_message', models.BooleanField(default=True, help_text='Members can send message or not', verbose_name='Can send message')),
                ('can_add_member', models.BooleanField(default=True, help_text='Members can add member or not', verbose_name='Can add member')),
            ],
        ),
        migrations.CreateModel(
            name='InviteLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(auto_created=True, blank=True, null=True, verbose_name='Deleted at')),
                ('link', models.CharField(db_index=True, default=community.models.utils.link_generator.generate_invite_link, max_length=37, unique=True, validators=[django.core.validators.RegexValidator('^([-])[A-Za-z\\d]{32}([\\d]{4})$')], verbose_name='Invite link')),
                ('is_deleted', models.BooleanField(default=False, help_text='Is link deleted or not', verbose_name='Is deleted')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('chat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invite_links', to='community.communitychat')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField(choices=[(3, 'Owner'), (2, 'Admin'), (1, 'Normal'), (0, 'Restricted'), (-1, 'Banned')], default=1, verbose_name='Rank')),
                ('is_joined_by_guid', models.BooleanField(default=False, help_text='Is member joined by guid', verbose_name='Is used guid')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='community.communitychat')),
                ('used_link', models.ForeignKey(help_text='The link that member used to join if joined by link', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members_used', to='community.invitelink')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_members', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GroupCommunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rules', models.OneToOneField(auto_created=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='group', to='community.grouprules')),
            ],
        ),
    ]
